/* Modelagem Básica - 
ENTIDADE=TABELA
CAMPOS=ATRIBUTOS */

CLIENTE

NOME - CARACTER(30)
CPF - NUMERICO(11)
EMAIL - CARACTER(30)
TELEFONE - CARACTER(30)
ENDERECO - CARACTER(100)
SEXO - CARACTER(1)

/* PROCESSOS DE MODELAGEM */
/* FASE 01 E FASE 02 - AD ADM DE DADOS */
MODELAGEM CONCEITUAL - RASCUNHO
MODELAGEM LÓGICA - QUALQUER PROGRAMA DE MODELAGEM
/* FASE 03 - DBA / AD */
MODELAGEM FÍSICA - SCRIPTS DE BANCO

/* INICIANDO A MODELAGEM FÍSICA */
/* CRIANDO O BANCO DE DADOS */
CREATE DATABASE PROJETO;

/* CONECTANDO-SE AO BANCO */
USE PROJETO;
/* CRIANDO A TABELA DE CLIENTES */
CREATE TABLE CLIENTE (
	NOME VARCHAR(30),
	SEXO CHAR(1),
	EMAIL VARCHAR(30),
	CPF INT(11),
	TELEFONE VARCHAR(30),
	ENDERECO VARCHAR(100)
);

/* VERIFICANDO AS TABELAS DO BANCO */
SHOW TABLES;

/* DESCOBRINDO COMO É A ESTRUTURA DE UMA TABELA */
DESC CLIENTE;

/* SINTAXE BASICA DE INSERÇÃO - INSERT INTO TABELA... */
/* FORMA 01 - OMITINDO COLUNAS - FORMA NÃO MUITO SEGURA */
INSERT INTO CLIENTE VALUES('JOAO', 'M', 'JOAO@GMAIL.COM', 123456789, '12345678', 'MARIA LACERDA - RIO DE JANEIRO - RJ');
INSERT INTO CLIENTE VALUES('CELIA', 'F', 'CELIA@GMAIL.COM', 098765432, '09876543', 'DO VALE - SÃO LUÍS - MA');
INSERT INTO CLIENTE VALUES('CARLOS', 'M',NULL, 244658690, '24465869', 'PATOS - DE MINAS - MG');

/* FORMA 02 - COLOCANDO AS COLUNAS - MELHOR FORMA */
INSERT INTO CLIENTE (NOME, SEXO, ENDERECO, TELEFONE, CPF) VALUES('LUIZ', 'M', 'MARIA LACERDA - RIO DE JANEIRO - RJ', '56789432', 567894320);

/* FORMA 03 - INSERT COMPACTO - SOMENTE MYSQL */
INSERT INTO CLIENTE VALUES('JOAO', 'M', 'JOAO@GMAIL.COM', 123456789, '12345678', 'MARIA LACERDA - RIO DE JANEIRO - RJ'),
							('CELIA', 'F', 'CELIA@GMAIL.COM', 098765432, '09876543', 'DO VALE - SÃO LUÍS - MA');
							
/* O COMANDO SELECT - PROJEÇÃO (pedir uma query, projetar colunas que existem e não existem)*/
SELECT NOW();
SELECT NOW() as DATA_HORA, 'FELIPE MAFRA' as PROFESSOR; /* coluna que não existe */
SELECT 'JOAO';

/* ALIAS DE COLUNAS */
SELECT NOME, SEXO, EMAIL FROM CLIENTE;
SELECT NOME AS CLIENTE, SEXO, EMAIL FROM CLIENTE; /*Não vai mostrar nome e sim, cliente */
SELECT NOME, SEXO, EMAIL, ENDERECO FROM CLIENTE;
SELECT NOME, SEXO, EMAIL, ENDERECO, NOW() AS DATA_HORA FROM CLIENTE;

/* APENAS PARA FINS ACADEMICOS */
SELECT * FROM CLIENTE; /* ISTO TRAFEGA DADOS A MAIS NA REDE, ISTO NÃO É BOM */

/* FILTRO FILTRA EM NÍVEL DE LINHA E NÃO DE COLUNA COMO FAZ A PROJEÇÃO
PARA PROJEÇÃO -> SELECT
PARA SELEÇÃO -> WHERE */

/* FILTRANDO DADOS COM WHERE E LIKE */
SELECT NOME, TELEFONE FROM CLIENTE;

/* FILTRANDO */
SELECT NOME, SEXO FROM CLIENTE
WHERE SEXO = 'M';

SELECT NOME, ENDERECO FROM CLIENTE
WHERE SEXO = 'F';

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO = 'RJ';

/* UTILIZANDO O LIKE - PESQUISAR DENTRO DE UM CAMPO */
SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE 'RJ';

/* CARACTER CORINGA % -> QUALQUER COISA */
SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%RJ';

SELECT NOME, SEXO FROM CLIENTE
WHERE ENDERECO LIKE '%DO VALE%';

/* OPERADORES LÓGICOS 
OR - BASTA 1 CONDIÇÃO SEJA VERDADEIRA
AND - AS DUAS PRECISAM SER VERDADEIRAS
*/

/*OR*/
SELECT NOME, SEXO, ENDERECO FROM CLIENTE 
WHERE
SEXO = 'M' OR ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' OR ENDERECO LIKE '%DO VALE';

/*AND*/
SELECT NOME, SEXO, ENDERECO FROM CLIENTE 
WHERE
SEXO = 'M' AND ENDERECO LIKE '%RJ';

SELECT NOME, SEXO, ENDERECO FROM CLIENTE
WHERE
SEXO = 'F' AND ENDERECO LIKE '%DO VALE';

/* COUNT(*), GROUP BY, PERFORMANCE COM OPERADORES LÓGICOS*/

/* COUNT CONTA OS REGISTROS DE UMA TABELA
/* CONTANDO OS REGISTROS DE UMA TABELA */

SELECT COUNT(*) AS "Quantidade de Registros da tab. Clientes" FROM CLIENTE;

/* OPERADOR GROUP BY */

SELECT SEXO, COUNT(*)
FROM CLIENTE;

SELECT SEXO, COUNT(*)
FROM CLIENTE
GROUP BY SEXO;

/* PERFORMANCE EM OPERADORES LÓGICOS */
/* 1 MILHAO DE REGISTROS

PARA CONTAR
SELECT COUNT(*) FROM CLIENTE;

SELECT SEXO, COUNT(*) FROM CLIENTE
GROUP BY SEXO;

SELECT CIDADE, COUNT(*) FROM CLIENTE
GROUP BY CIDADE;

CONDICAO
SEXO = F
CIDADE = RIO DE JANEIRO

SITUACAO - TRATANDO COM OU / OR 
70% MULHERES = SEXO = F
30% MORA NO RIO DE JANEIRO
> COLOCA O QUE TEM MAIS CHANCE NA FRENTE DE DAR TRUE

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE SEXO = 'F'
OR CIDADE = 'RIO DE JANEIRO';

SITUACAO - TRATANDO COM E / AND
> INVERTER A ORDEM, POIS PARA SER TRUE AS DUAS PRECISAM SER CHECADAS
70% MULHERES = SEXO = F
30% MORA NO RIO DE JANEIRO

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE CIDADE = 'RIO DE JANEIRO'
AND SEXO = 'F';
 
 
 /* FILTRANDO VALORES NULOS */
 
SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE EMAIL IS NULL;

SELECT NOME, SEXO, ENDERECO
FROM CLIENTE
WHERE EMAIL IS NOT NULL;

/* UTILIZANDO O UPDATE PARA ATUALIZAR VALORES */
SELECT * FROM CLIENTE
WHERE NOME = 'JOAO';

UPDATE CLIENTE
SET EMAIL = 'JOAO76@GMAIL.COM'
WHERE NOME = 'JOAO';

/* COMMIT E ROLLBACK */
/* DELETANDO REGISTROS COM A CLAUSULA DELETE */

DELETE FROM CLIENTE;

-- É BOM CONTAR OS REGISTROS PARA TER CERTEZA ANTES DE DELETAR
SELECT COUNT(*) FROM CLIENTE; -- COUNT TOTAL 6

SELECT COUNT(*) FROM CLIENTE -- TOTAL DELETADO TEM QUE TER 1 REGISTRO
WHERE NOME = 'ANA';

DELETE FROM CLIENTE
WHERE NOME = 'ANA';

SELECT COUNT(*) FROM CLIENTE;

INSERT INTO CLIENTE (NOME, SEXO, ENDERECO, TELEFONE, CPF) VALUES('CARLOS', 'M', 'MARIA LACERDA - RIO DE JANEIRO - RJ', '56789432', 567894320);

-- Se eu não tiver certeza do que vou deletar, faça um select:
DELETE FROM CLIENTE
WHERE NOME = 'CARLOS'
OR EMAIL = 'CELIA@GMAIL.COM';
-- Testando com select antes de deletar:
SELECT * FROM CLIENTE -- OR TRAZ TODO MUNDO COM PELO MENOS UMA DAS DUAS CONDIÇÕES
WHERE NOME = 'CARLOS'
OR EMAIL = 'CELIA@GMAIL.COM';

DELETE FROM CLIENTE -- AND TRAZ APENAS O REGISTRO QUE SATISFAÇA AS DUAS CONDIÇÕES
WHERE NOME = 'CARLOS'
AND EMAIL = 'CELIA@GMAIL.COM';